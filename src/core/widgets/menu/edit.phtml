<!--link rel="stylesheet" href="libs/font-awesome/css/font-awesome.min.css"-->
<script src="libs/jquery/jquery-2.2.4.min.js"></script>
<script src="libs/jquery/jquery-sortable.js"></script>

<style>
body.dragging, body.dragging * {
  cursor: move !important;
}

.dragged {
  position: absolute;
  opacity: 0.4;
  z-index: 2000;
}

ol {
	padding-left: 16px;
	background: #ddd;
}
ol li {
	padding: 0px;
	/*padding-left :0;*/
    margin-right: -1px;
    margin-bottom:-1px;
	border: 1px solid #bbb;
	background: #fff;
	/*max-width; 400px;*/
	min-height:20px;
    line-height: 3;
	list-style-type: none;
}
ol li i { margin:0 16px; }
ol li i.sort-item { cursor: ns-resize; }
ol li i.deletebtn { cursor: pointer; }

ol li p {
	display:inline;
	/*border-right: 1px solid #bbb;*/
	padding:0 12;
	width: 400px;
}
ol li.placeholder {
  position: relative;
}
ol li.placeholder:before {
  position: absolute;
  margin-right: 10px;
}

input {
    border: 0; display: inline-block; width: auto;
}
input:focus {
    outline: none;
}
.menu_headers {padding-left: 48px}
.menu_headers div,
.menu_nested input {width:150px; display: inline-block;}
</style>

<div class="gm-10">

<div class="menu_headers">
    <div>Title</div>
    <div>Url</div>
</div>

<ol class="menu_nested serialization vertical" style="display: inline-block;">
    <?php
    $mm = gila::menu();
    echo_children ($mm);

    function echo_children ($mm)
    {
        foreach ($mm as $mi) {
            echo "<li data-url=\"{$mi['url']}\" data-title=\"{$mi['title']}\"><i class='sort-item'>||</i>";
            echo "<input class='_title' value='{$mi['title']}'/><input class='_url' value='{$mi['url']}'/><i class='deletebtn fa fa-remove'></i><ol>";
            if (isset($mi['children'])) echo_children ($mi['children']);
            echo "</ol></li>";
        }
    }
    ?>

</ol>
</div>

<div class="gm-2">
    <a class="btn btn-primary" onclick="update_widget()">Update</a>
    <a class="btn btn-primary" onclick="add_item()">Add Item</a>
</div>


<script>


// nested lists
var oldContainer;
var group = $("ol.menu_nested").sortable({
  group: 'nested',
  handle: '.sort-item',
  afterMove: function (placeholder, container) {
    if(oldContainer != container){
      if(oldContainer)
        oldContainer.el.removeClass("active");
      container.el.addClass("active");

      oldContainer = container;
    }
  },
  //delay: 500,
  onDrop: function ($item, container, _super) {
    container.el.removeClass("active");
    _super($item, container);


 }
});

function add_item () {
    group.prepend('<li data-url="" data-title="Item"><i class="sort-item">||</i><input class="_title" value="Item"/><input class="_url" value=""/><i class="deletebtn fa fa-remove"></i><ol></ol></li>');
}

function update_widget() {
	var data = group.sortable("serialize").get();
    var jsonString = JSON.stringify(data[0]);

    $.post(
        "admin/update_widget",
        {widget_data:jsonString, widget_id:<?=$widget_id?>},
        function (response) {
            alert(response);
        }
    );
}

//$('ol li').attr("contenteditable",true);

$(document).on('change', '._title', function (){
    this.parentNode.attributes['data-title'].value = this.value;
});
$(document).on('change', '._url', function (){
    this.parentNode.attributes['data-url'].value = this.value;
});
$(document).on('click', '.deletebtn', function (){
    ol = this.parentNode.getElementsByTagName("OL")[0];
    if (ol.innerHTML != '') {
        response = confirm('Are you sure you want to delete this item an all its children?');
        if (response == false) return;
    }
    this.parentNode.remove();
});


/*
/widgets-name/
	/widget-name.php
		- __construct
		- view
		-
*/
</script>
